app-id: moe.launcher.wavey-launcher
runtime: org.gnome.Platform
runtime-version: '45'
sdk: org.gnome.Sdk
sdk-extensions:
  - org.freedesktop.Sdk.Extension.rust-stable
command: moe.launcher.wavey-launcher
rename-desktop-file: wavey-launcher.desktop
finish-args:
  - --share=network
  - --share=ipc
  - --socket=x11 # Not fallback-x11, because while the launcher supports Wayland, Wine doesn't (yet)
  - --socket=wayland
  - --socket=pulseaudio
  - --filesystem=xdg-run/app/com.discordapp.Discord:create
  - --filesystem=/mnt
  - --filesystem=/media
  - --filesystem=/run/media
  - --talk-name=org.freedesktop.Notifications
  - --device=all # Controllers
  - --allow=devel # Required to make Wine work

build-options:
  append-path: /usr/lib/sdk/rust-stable/bin

cleanup:
  - /include
  - /lib/pkgconfig
  - /man
  - /share/doc
  - /share/gtk-doc
  - /share/man
  - /share/pkgconfig
  - /share/vala
  - '*.la'
  - '*.a'

modules:

  # copy/pasted from bottles
  - name: gamemode
    buildsystem: meson
    config-opts:
      - -Dwith-examples=false
      - -Dwith-util=false
      - -Dwith-sd-bus-provider=no-daemon
    sources: &gamemode_sources
      - type: archive
        url: https://github.com/FeralInteractive/gamemode/releases/download/1.8.1/gamemode-1.8.1.tar.xz
        sha256: cdb117d05d65dbd03c0bd2104df874a1f878db8f23cc4d55bfa44e832482269e
        x-checker-data:
          type: anitya
          project-id: 17410
          url-template: https://github.com/FeralInteractive/gamemode/releases/download/$version/gamemode-$version.tar.xz

  - name: gamemoderun
    buildsystem: simple
    build-commands:
      - install -Dm755 data/gamemoderun -t /app/bin
    sources: *gamemode_sources

  - name: git
    buildsystem: autotools
    config-opts:
      - --without-tcltk
    post-install:
      - rm -rf /app/share/gitweb
      - find /app/libexec/git-core/ -type f -not -name git -and -not -name git-rev-parse
        -and -not -name git-remote -and -not -name git-remote-https -and -not -name
        git-fetch -and -not -name git-reset -and -not -name git-clone -delete
    sources:
      - type: archive
        url: https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.45.2.tar.xz
        sha256: 51bfe87eb1c02fed1484051875365eeab229831d30d0cec5d89a14f9e40e9adb
        x-checker-data:
          type: anitya
          project-id: 5350
          url-template: https://mirrors.edge.kernel.org/pub/software/scm/git/git-$version.tar.xz

  # freedesktop sdk does not provide avdec_h264 due to not compiling ffmpeg without h.264 support, so we have to compile it ourselves
  # this is mostly taken from the freedesktop sdk repository and the kdenlive flatpak manifest
  - name: ffmpeg
    buildsystem: autotools
    config-opts:
      - --disable-doc
      - --disable-static
      - --enable-shared
      - --enable-gnutls
      - --enable-gcrypt
      - --enable-ladspa
      - --enable-lcms2
      - --enable-libaom
      - --enable-libdav1d
      - --enable-libmp3lame
      - --enable-libfontconfig
      - --enable-libfreetype
      - --enable-libfribidi
      - --enable-libopus
      - --enable-libpulse
      - --enable-libspeex
      - --enable-libtheora
      - --enable-libvorbis
      - --enable-libvpx
      - --enable-librsvg
      - --enable-libwebp
      - --enable-libxml2
      - --enable-libopenjpeg
      - --enable-openal
      - --enable-opengl
      - --enable-sdl2
      - --enable-vulkan
      - --enable-zlib
      - --enable-libv4l2
      - --enable-libxcb
      - --enable-vdpau
      - --enable-vaapi
      - --enable-pthreads
      - --enable-libfdk-aac
      - --enable-decoder="h264"
    build-options:
      prepend-path: /usr/lib/sdk/llvm17/bin
      prepend-ld-library-path: /usr/lib/sdk/llvm17/lib
    cleanup:
      - /share/ffmpeg/examples
    sources:
      - type: git
        url: https://git.ffmpeg.org/ffmpeg.git
        tag: n6.1.1

  - name: wavey
    buildsystem: simple
    build-options:
      env:
        CARGO_HOME: ./cargo
    build-commands:
      - cargo --offline fetch --manifest-path Cargo.toml --verbose
      - cargo --offline build --release --verbose

      - cp target/release/wavey-launcher /app/bin/wavey-launcher
      - cp moe.launcher.wavey-launcher.sh /app/bin/moe.launcher.wavey-launcher
      - chmod +x /app/bin/moe.launcher.wavey-launcher
    sources:
      - type: git
        url: https://github.com/an-anime-team/wavey-launcher
        tag: &wavey_tag 1.0.0
      - type: file
        path: moe.launcher.wavey-launcher.sh
      - cargo-sources.json

  # not included in wavey so the launcher doesn't have to be rebuilt every time the metadata is changed
  - name: metadata
    buildsystem: simple
    build-commands:
      - mkdir -p /app/share/icons/hicolor/512x512/apps/
      - cp assets/images/icon.png /app/share/icons/hicolor/512x512/apps/moe.launcher.wavey-launcher.png
      - desktop-file-install --dir=/app/share/applications --set-key=Exec --set-value=moe.launcher.wavey-launcher
        --set-key=Icon --set-value=moe.launcher.wavey-launcher assets/wavey-launcher.desktop

      - mkdir -p /app/share/metainfo/
      - cp moe.launcher.wavey-launcher.metainfo.xml /app/share/metainfo/

      - mkdir -p /app/utils/
    sources:
      - type: git
        url: https://github.com/an-anime-team/wavey-launcher
        tag: *wavey_tag
      - type: file
        path: moe.launcher.wavey-launcher.metainfo.xml
